How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Using diff was much easier than manually comparing the two files. Since
	diff/fc puts the differing lines below each other, it is much easier to
	detect the exact difference between the two.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It will be easy to revert changes if needed. It will also be easier to find
	out the version in which bugs were introduced.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    There will be lesser number of versions. You can control the logical point
	at which the save happens.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    In programming, an application module may consist of several files that 
	comprise the functionality of that module. Hence it makes more sense to
	save them as a logical unit rather than independently. This way the developer
	could save them after the unit testing has been completed.

How can you use the commands git log and git diff to view the history of files?

    git log provides a history of all the changes made to the files. git diff
	allows you to compare the contents of one version with another version and
	view the differences between the two versions.

How might using version control make you more confident to make changes that
could break something?

    Version control will allow me to revert changes if a bug is introduced. I can
	keep making changes without having to manually keep a track of the changes
	that are being made.

Now that you have your workspace set up, what do you want to try using Git for?

    For exploring open source software and learning cutting edge web technologies.